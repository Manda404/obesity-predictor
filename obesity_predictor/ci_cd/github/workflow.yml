name: üöÄ CI/CD Pipeline ‚Äî Obesity Predictor

on:
  push:
    branches: [ main, dev ]
  pull_request:
    branches: [ main, dev ]

jobs:
  build-and-test:
    name: üß™ Test, Lint & Build
    runs-on: ubuntu-latest

    env:
      PYTHONPATH: ${{ github.workspace }}
      MLFLOW_TRACKING_URI: "sqlite:///mlflow.db"
      MLFLOW_EXPERIMENT_NAME: "obesity_experiments"

    steps:
      # -----------------------------
      # 1Ô∏è‚É£ Checkout repository
      # -----------------------------
      - name: üì¶ Checkout code
        uses: actions/checkout@v4

      # -----------------------------
      # 2Ô∏è‚É£ Set up Python environment
      # -----------------------------
      - name: üêç Set up Python 3.11
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      # -----------------------------
      # 3Ô∏è‚É£ Install Poetry
      # -----------------------------
      - name: üß∞ Install Poetry
        run: |
          pip install poetry
          poetry config virtualenvs.create false

      # -----------------------------
      # 4Ô∏è‚É£ Install dependencies
      # -----------------------------
      - name: üì¶ Install project dependencies
        run: |
          poetry install --no-root

      # -----------------------------
      # 5Ô∏è‚É£ Lint & Format check
      # -----------------------------
      - name: üßπ Code quality (Black + isort)
        run: |
          pip install black isort
          black --check obesity_predictor
          isort --check-only obesity_predictor

      - name: üß† Typing check (mypy)
        run: |
          pip install mypy
          mypy obesity_predictor --ignore-missing-imports

      # -----------------------------
      # 6Ô∏è‚É£ Run tests (pytest)
      # -----------------------------
      - name: ‚úÖ Run unit tests
        run: |
          pip install pytest
          pytest -v --maxfail=1 --disable-warnings --cov=obesity_predictor

      # -----------------------------
      # 7Ô∏è‚É£ Build Docker images
      # -----------------------------
      - name: üê≥ Build Docker images (API + App)
        run: |
          docker build -t obesity-api -f obesity_predictor/ci_cd/docker/Dockerfile.api .
          docker build -t obesity-app -f obesity_predictor/ci_cd/docker/Dockerfile.app .

      # -----------------------------
      # 8Ô∏è‚É£ Upload coverage report
      # -----------------------------
      - name: üìà Upload coverage to Codecov
        uses: codecov/codecov-action@v4
        with:
          files: ./coverage.xml
          token: ${{ secrets.CODECOV_TOKEN }}
          fail_ci_if_error: false
